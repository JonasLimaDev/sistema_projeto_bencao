# Generated by Django 4.1.3 on 2022-12-13 12:13

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bairro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=75, unique=True)),
            ],
            options={
                'ordering': ('nome',),
            },
        ),
        migrations.CreateModel(
            name='DadosEducacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estuda', models.CharField(choices=[('1', 'Sim'), ('2', 'Não')], max_length=1, verbose_name='Está Estudando?')),
                ('nivel_curso', models.CharField(blank=True, choices=[('1', 'Alfabetização'), ('2', 'Ensino Infantil'), ('3', 'Ensino Fundamental'), ('4', 'Ensino Médio'), ('5', 'Ensino Técnico'), ('6', 'Ensino Superior'), ('7', 'Pós Graduação')], max_length=1, null=True, verbose_name='Está Cursando?')),
                ('local', models.CharField(blank=True, max_length=60, null=True, verbose_name='Local Onde Estuda')),
            ],
            options={
                'verbose_name': 'Dados de Educação',
                'verbose_name_plural': 'Dados de Educacionais',
            },
        ),
        migrations.CreateModel(
            name='EquipamentoComunitario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_equipamento', models.CharField(max_length=25, verbose_name='Equipamento Comunitário')),
            ],
            options={
                'verbose_name': 'Equipamento Comunitário',
                'verbose_name_plural': 'Equipamentos Comunitários',
            },
        ),
        migrations.CreateModel(
            name='Identificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rg', models.CharField(max_length=16, verbose_name='Nº RG')),
                ('orgao_emissor', models.CharField(max_length=25, verbose_name='Órgão Emissor (RG)')),
                ('data_emissao', models.DateField(verbose_name='Data de Emissão (RG)')),
                ('titulo_eleitor', models.CharField(max_length=25, verbose_name='Nº Titulo de Eleitor')),
                ('zona', models.CharField(max_length=5, verbose_name='Zona Eleitoral')),
                ('secao', models.CharField(max_length=5, verbose_name='Seção Eleitoral')),
                ('natural_cidade', models.CharField(max_length=50, verbose_name='Cidade de Naturalidade')),
                ('natural_estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, verbose_name='Estado Naturalidade')),
            ],
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150)),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('sexo', models.CharField(choices=[('1', 'Feminino'), ('2', 'Masculino')], max_length=1)),
                ('trabalho', models.CharField(choices=[('1', 'Não Trabalha'), ('2', 'Trabalhador Por Conta Própria'), ('3', 'Trabalhador Temporário em Área Rural'), ('4', 'Empregado Sem Carteira de Trabalho Assinada'), ('5', 'Empregado Com Carteira de Trabalho Assinada'), ('6', 'Trabalhador Doméstico Sem Carteira de Trabalho Assinada'), ('7', 'Trabalhador Não Remunerado'), ('8', 'Estagiário'), ('9', 'Aprendiz'), ('10', 'Aposentado'), ('11', 'Pensionista')], max_length=2)),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF')),
                ('nis', models.CharField(blank=True, max_length=11, null=True, verbose_name='NIS')),
                ('escolaridade', models.CharField(choices=[('1', 'Não Alfabetizado'), ('2', 'Fundamental Incompleto'), ('3', 'Fundamental Completo'), ('4', 'Ensino Médio Incompleto'), ('5', 'Ensino Médio Completo'), ('6', 'Ensino Superior Incompleto'), ('7', 'Ensino Superior Completo')], max_length=1)),
                ('contato', models.CharField(blank=True, max_length=15, null=True)),
                ('renda', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Pessoa',
                'verbose_name_plural': 'Pessoas',
            },
        ),
        migrations.CreateModel(
            name='Habitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situacao_moradia', models.CharField(choices=[('1', 'Alugada'), ('2', 'Própria'), ('3', 'Cedida'), ('4', 'Invasão'), ('5', 'Sem Moradia Fixa')], max_length=1, verbose_name='Situação da Moradia')),
                ('tipo_construcao', models.CharField(choices=[('1', 'Alvenaria'), ('2', 'Barro'), ('3', 'Madeira'), ('4', 'Outro'), ('5', 'Não Se Aplica')], max_length=1, verbose_name='Tipo de Construção')),
                ('rede_eletrica', models.CharField(choices=[('1', 'Com Medidor Próprio'), ('2', 'Sem Padrão'), ('3', 'Não Possui')], max_length=1, verbose_name='Possui Energia Elétrica')),
                ('possui_abastecimento', models.CharField(choices=[('1', 'Rede Geral de Distribuição'), ('2', 'Poço'), ('3', 'Fonte, Nascente ou Mina'), ('4', ' Carro-Pipa'), ('5', 'Água da Chuva Armazenada'), ('6', ' Rios, Açudes, Córregos, Lagos e Igarapés'), ('7', 'Outra')], max_length=1, verbose_name='Abastecimento de Água')),
                ('possui_rede_esgoto', models.CharField(choices=[('1', 'Rede Geral ou Pluvial'), ('2', 'Fossa Rudimentar ou Buraco'), ('3', 'Vala'), ('4', 'Não Possui')], max_length=1, verbose_name='Possui Rede de Esgoto')),
                ('possui_coleta', models.CharField(choices=[('1', 'Coletado no Domicílio Por Serviço de Limpeza'), ('2', 'Depositado em Caçamba de Serviço de Limpeza '), ('3', 'Queimado na Propriedade'), ('4', 'Enterrado na Propriedade'), ('5', 'Jogado em Terreno Baldio, Encosta ou Área Pública'), ('6', 'Outro Destino')], max_length=1, verbose_name='Coleta de Lixo')),
                ('pavimentacao', models.CharField(choices=[('1', 'Asfalto'), ('2', 'Bloqueteamento'), ('3', 'Não Possui')], max_length=1, verbose_name='Pavimentação da Rua')),
                ('tempo_ocupacao', models.IntegerField(verbose_name='Tempo de Ocupação do Imóvel')),
                ('numero_moradores', models.IntegerField(verbose_name='Número de Moradores')),
                ('numero_comodos', models.IntegerField(verbose_name='Número de Cômodos')),
                ('equipamento_comunitario', models.ManyToManyField(to='cadastros.equipamentocomunitario', verbose_name='Equipamento Comunitários Próximos')),
            ],
            options={
                'verbose_name': 'Habitação',
                'verbose_name_plural': 'Habitações',
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logradouro', models.CharField(max_length=100)),
                ('numero', models.CharField(blank=True, max_length=35, null=True)),
                ('complemento', models.CharField(blank=True, max_length=170, null=True)),
                ('ponto_referencia', models.CharField(blank=True, max_length=250, null=True, verbose_name='Ponto de Referência')),
                ('cep', models.CharField(blank=True, max_length=15, null=True, verbose_name='CEP')),
                ('bairro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastros.bairro')),
            ],
            options={
                'ordering': ('bairro__nome',),
            },
        ),
        migrations.CreateModel(
            name='Cadastro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_cadastro', models.DateField(default=datetime.datetime.now)),
                ('endereco', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cadastros.endereco')),
                ('habitacao', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cadastros.habitacao')),
            ],
        ),
        migrations.CreateModel(
            name='Referencia',
            fields=[
                ('pessoa_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cadastros.pessoa')),
                ('identidade_genero', models.CharField(choices=[('1', 'Cisgênero'), ('2', 'Transgênero'), ('3', 'Não Binário'), ('4', 'Não Declarado')], max_length=1, verbose_name='Identidade de Gênero')),
                ('apelido', models.CharField(blank=True, max_length=20, null=True)),
                ('nome_social', models.CharField(blank=True, max_length=30, null=True, verbose_name='Nome Social')),
                ('situacao_civil', models.CharField(choices=[('1', 'Solteiro(a)'), ('2', 'Casado(a)'), ('3', 'Divorciado(a)'), ('4', 'Viúvo(a)')], max_length=1, verbose_name='Situação Civil')),
                ('cor_raca', models.CharField(choices=[('1', 'Branca'), ('2', 'Preta'), ('3', 'Amarela'), ('4', 'Parda'), ('5', 'Indígena')], max_length=1, verbose_name='Identificação Étnico-Racial')),
                ('contato2', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contato Alternativo')),
                ('documentos_extras', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cadastros.identificacao')),
            ],
            options={
                'verbose_name': 'Referência Familiar',
                'verbose_name_plural': 'Referências Familiares',
            },
            bases=('cadastros.pessoa',),
        ),
        migrations.CreateModel(
            name='Membros',
            fields=[
                ('pessoa_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cadastros.pessoa')),
                ('parentesco', models.CharField(choices=[('1', 'Esposa(o)'), ('2', 'Filho(a)'), ('3', 'Neto(a)'), ('4', 'Sobrinho(a)'), ('5', 'Mãe'), ('6', 'Pai'), ('7', 'Avô'), ('8', 'Avó'), ('9', 'Tio(a)'), ('10', 'Sobrinho(a)'), ('11', 'Outro')], default='2', max_length=2)),
                ('cadastro_membro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastros.cadastro')),
            ],
            options={
                'verbose_name': 'Membro',
                'verbose_name_plural': 'Membros',
            },
            bases=('cadastros.pessoa',),
        ),
        migrations.AddField(
            model_name='cadastro',
            name='responsavel_familiar',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cadastros.referencia'),
        ),
    ]
